name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
      - staging
      - production
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build tool image & run make ci
    runs-on: ubuntu-latest

    env:
      # AWS creds from repo secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      # Non-interactive modes
      TF_IN_AUTOMATION: "true"
      TERRAGRUNT_NON_INTERACTIVE: "true"
      CHECKOV_ENABLE_LOGGING: "false"

      # Local tag for the built image
      TOOL_IMAGE: local/terragrunt-tofu-ci:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build tool image (from Dockerfile)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ env.TOOL_IMAGE }}
          # We only need the image locally on the runner:
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify tools in image (versions)
        run: |
          docker run --rm $TOOL_IMAGE bash -lc '
            set -e
            echo "Terraform:       $(terraform version -json | jq -r .terraform_version)"
            echo "OpenTofu:        $(tofu version -json | jq -r .terraform_version)"
            echo "Terragrunt:      $(terragrunt --version | head -n1)"
            echo "tflint:          $(tflint --version | head -n1)"
            echo "trivy:           $(trivy --version | head -n1)"
            echo "terraform-docs:  $(terraform-docs --version | awk "{print \$3}")"
            echo "gitleaks:        $(gitleaks version || true)"
            echo "hclfmt:          $(hclfmt -version || true)"
            echo "Checkov:         $(checkov --version)"
          '

      - name: Run make ci inside image
        run: |
          docker run --rm \
            -e AWS_ACCESS_KEY_ID \
            -e AWS_SECRET_ACCESS_KEY \
            -e AWS_DEFAULT_REGION \
            -e TF_IN_AUTOMATION \
            -e TERRAGRUNT_NON_INTERACTIVE \
            -e CHECKOV_ENABLE_LOGGING \
            -v "${{ github.workspace }}:/workspace" \
            -w /workspace \
            $TOOL_IMAGE \
            bash -lc 'make ci'
>>>>>>> 1fd8ace (made Dockerfile to have testing tools to run the github actions on)

