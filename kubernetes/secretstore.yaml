---
# ClusterSecretStore connects External Secrets Operator to AWS Secrets Manager
# This is cluster-scoped, so it can be used by ExternalSecrets in any namespace
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: aws-secrets-manager
  labels:
    app.kubernetes.io/name: cluster-secret-store
    environment: production
spec:
  provider:
    aws:
      service: SecretsManager
      # Region should match your helium project region
      region: us-east-1
      
      # Use IRSA (IAM Roles for Service Accounts) for authentication
      # This references the ServiceAccount we created
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
            namespace: external-secrets
---
# Optional: Create a namespaced SecretStore for app namespace
# Use this if you want namespace-specific stores
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  namespace: app
  labels:
    app.kubernetes.io/name: secret-store
    environment: production
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
            namespace: external-secrets
