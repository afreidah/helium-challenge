---
# ExternalSecret for Aurora PostgreSQL master credentials
# This will create a Kubernetes Secret named 'aurora-master-credentials' in the app namespace
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aurora-master-credentials
  namespace: app
  labels:
    app.kubernetes.io/name: external-secret
    app.kubernetes.io/component: database
    environment: production
  annotations:
    description: "Aurora PostgreSQL master user credentials from AWS Secrets Manager"
spec:
  # Sync interval - check for updates every 5 minutes
  refreshInterval: 5m
  
  # Reference to the SecretStore
  secretStoreRef:
    kind: ClusterSecretStore
    name: aws-secrets-manager
  
  # Target Kubernetes Secret configuration
  target:
    name: aurora-master-credentials
    creationPolicy: Owner
    deletionPolicy: Retain
    
    # Template allows you to transform the secret data
    template:
      type: Opaque
      engineVersion: v2
      metadata:
        labels:
          app.kubernetes.io/name: aurora-credentials
          environment: production
      data:
        # These match the keys that will be in your Kubernetes Secret
        # The values come from the AWS Secrets Manager secret
        DB_HOST: "{{ .host }}"
        DB_PORT: "{{ .port }}"
        DB_NAME: "{{ .dbname }}"
        DB_USERNAME: "{{ .username }}"
        DB_PASSWORD: "{{ .password }}"
        
        # Connection string format for easy use
        DATABASE_URL: "postgresql://{{ .username }}:{{ .password }}@{{ .host }}:{{ .port }}/{{ .dbname }}"
  
  # Data to fetch from AWS Secrets Manager
  dataFrom:
    - extract:
        # This matches the secret name in root.hcl secrets_config
        key: production/aurora/master-credentials
        
        # If your secret is a JSON object, it will automatically parse it
        # Expected JSON structure:
        # {
        #   "username": "master_user",
        #   "password": "secret_password",
        #   "host": "aurora-cluster.cluster-xxxxx.us-east-1.rds.amazonaws.com",
        #   "port": "5432",
        #   "dbname": "postgres"
        # }
---
# ExternalSecret for Aurora PostgreSQL application user credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aurora-app-credentials
  namespace: app
  labels:
    app.kubernetes.io/name: external-secret
    app.kubernetes.io/component: database
    environment: production
  annotations:
    description: "Aurora PostgreSQL application user credentials from AWS Secrets Manager"
spec:
  refreshInterval: 5m
  
  secretStoreRef:
    kind: ClusterSecretStore
    name: aws-secrets-manager
  
  target:
    name: aurora-app-credentials
    creationPolicy: Owner
    deletionPolicy: Retain
    template:
      type: Opaque
      engineVersion: v2
      metadata:
        labels:
          app.kubernetes.io/name: aurora-app-credentials
          environment: production
      data:
        DB_HOST: "{{ .host }}"
        DB_PORT: "{{ .port }}"
        DB_NAME: "{{ .dbname }}"
        DB_USERNAME: "{{ .username }}"
        DB_PASSWORD: "{{ .password }}"
        DATABASE_URL: "postgresql://{{ .username }}:{{ .password }}@{{ .host }}:{{ .port }}/{{ .dbname }}"
  
  dataFrom:
    - extract:
        # Application user secret path - matches root.hcl secrets_config
        key: production/aurora/app-credentials
